Guided Lab: Creating an Amazon RDS Database
 

Lab overview and objectives
Traditionally, creating a database can be a complex process that requires either a database administrator or a systems administrator. In the cloud, you can simplify this process by using Amazon Relational Database Service (Amazon RDS).

After completing this lab, you should be able to:

Create an Amazon RDS database.  

Configure a web application to connect to the database instance

At the end of this lab, your architecture will look like the following example:

Architecture

Duration
This lab will require approximately 20 minutes to complete.

 

AWS service restrictions
In this lab environment, access to AWS services and service actions might be restricted to the ones that are needed to complete the lab instructions. You might encounter errors if you attempt to access other services or perform actions beyond the ones that are described in this lab.

 

Accessing the AWS Management Console
At the top of these instructions, choose  Start Lab.

The lab session starts.

A timer displays at the top of the page and shows the time remaining in the session.

 Tip: To refresh the session length at any time, choose  Start Lab again before the timer reaches 0:00.

Before you continue, wait until the circle icon to the right of the AWS  link in the upper-left corner turns green. When the lab environment is ready, the AWS Details panel displays.

To connect to the AWS Management Console, choose the AWS link in the upper-left corner above the terminal window.

A new browser tab opens and connects you to the console.

 Tip: If a new browser tab does not open, a banner or icon is usually at the top of your browser with a message that your browser is preventing the site from opening pop-up windows. Choose the banner or icon, and then choose Allow pop-ups.

Arrange the AWS Management Console tab so that it displays alongside these instructions. Ideally, you have both browser tabs open at the same time so that you can follow the lab steps.

 Do not change the Region unless specifically instructed to do so.

 

Task 1: Creating an Amazon RDS database
In this task, you will create a MySQL database in your virtual private cloud (VPC). MySQL is a popular open source relational database management system (RDBMS), so there are no software licensing fees.

 

At the top of the AWS Management Console, in the search box, enter and select RDS.

Choose Create database.

Under Engine options, select MySQL.

The options include several use cases, ranging from enterprise-class databases to Dev/Test systems. In the options, you might notice Amazon Aurora. Aurora is a MySQL-compatible system that was re-architected for the cloud. If your company uses large-scale MySQL or PostgreSQL databases, Aurora can provide enhanced performance.

Set the templates and availability and durability options:

Under the Templates section, select  Dev/Test.

Under the Availability and durability section, select   Single DB instance 

Note: the default Multi-AZ deployment option automatically creates a replica of the database in a second Availability Zone for High Availability, however in this lab that is not needed.

Under the Settings section, configure these options:

DB instance identifier: inventory-db

Master username: admin

Under Credentials management, choose Self managed and configure as follows:

Master password: lab-password

Confirm master password: lab-password

Under the Instance configuration section, configure these options:

Select Burstable classes (includes t classes).

Select db.t3.micro

In the Storage section next

For Storage type choose General Purpose SSD (gp2) from the Dropdown menu.

For Allocated storage  enter 20.

Expand Storage autoscaling 

Clear or Deselect Enable storage autoscaling.

Under the Connectivity section, configure these options: 

Virtual Private Cloud (VPC): Lab VPC

DB subnet group: Keep the default selection

Note: The subnet group created as part of lab setup has two private subnets, one per Availability Zone (AZ). This is required by the RDS service, in case the user changes the configuration to Multi-AZ in future.

Existing VPC security groups: 

Choose DB-SG. It will be highlighted. 

Remove the default security group.

Under Monitoring section, Clear (turn off) the Enable Enhanced monitoring option

Expand the Additional configuration panel, then configure these settings:

Initial database name: inventory

Note: This is the logical name of the database that will be used by the application.

 Feel free to review the many other options displayed on the page, but leave them set to their default values. Options include automatic backups, the ability to export log files, and automatic version upgrades. The ability to activate these features through check boxes demonstrates the power of using a fully managed database solution instead of installing, backing up, and maintaining the database yourself.

Choose Create database (at the bottom of the page).

You should receive a message indicating that your database is being created.

Before you continue to the next task, the database instance status must be Available. This process might take several minutes.

Note: If you receive a prompt Suggested add-ons for inventory-db, choose close.

 

Task 2: Configuring web application communication with a database instance
This lab automatically deployed an Amazon Elastic Compute Cloud (Amazon EC2) instance with a running web application. You must use the IP address of the instance to connect to the application.

At the Top of these instructions, from the i AWS Details section, copy the value for AppServerPublicIP .

Open a new web browser tab, paste the IP address you copied into the address bar, and then press ENTER.

The web application should appear. It does not display much information because the application is not yet connected to the database.

Choose Settings.

You can now configure the application to use the RDS DB instance you created earlier. You will first retrieve the Database Endpoint so that the application knows how to connect to a database.

Return to the AWS Management Console, but do not close the application tab. (You will return to it soon).

From the  Services menu, choose RDS to open the RDS console.

In the left navigation pane, choose Databases.

Choose inventory-db.

Go to the Connectivity & Security section and copy the Endpoint to your clipboard.

It should look similar to this example: inventory-db.crwxbgqad61a.rds.amazonaws.com

Return to the browser tab with the Inventory application, and enter these values:

Endpoint: Paste the endpoint you copied earlier

* **Database:** `inventory`
* **Username:** `admin`
* **Password:** `lab-password`
* Choose **Save**
 

The application stores this information into AWS Secrets manager as a Secret and uses it to connect to the database, load some initial data, and display instance information. Secrets Manager helps you improve your security posture, because you no longer need hard-coded credentials in application source code. You replace hard-coded credentials with a runtime call to the Secrets Manager service to retrieve credentials dynamically when you need them.

  Add inventory,  edit, and delete inventory information by using the web application.

The inventory information is stored in the Amazon RDS MySQL database that you created earlier in the lab. This means that any failure in the application server will not lose any data. It also means that multiple application servers can access the same data.

Insert new records into the table. Ensure that the table has 5 or more inventory records before submitting your work.

 You have now successfully launched the application and connected it to the database!

Optional: You can access the saved secrets values in the Secrets Manager console.

 

Submitting your work
At the top of these instructions, choose Submit to record your progress and when prompted, choose Yes. 

If the results don't display after a couple of minutes, return to the top of these instructions and choose Grades

Tip: You can submit your work multiple times. After you change your work, choose Submit again. Your last submission is what will be recorded for this lab.

To find detailed feedback on your work, choose Details followed by  View Submission Report.
